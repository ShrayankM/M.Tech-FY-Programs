WAL (Write Ahead Logging) = Do not write pages on disk until their log records have been written to
                            log records on disk

DATASTRUCTURES
Log records on memory
Log records on disk

Pages on disk and memory
Page = (pageLSN, recLSN, Data_variables)

pageLSN = Log Sequence Number of newest update done to the page making it dirty
recLSN = Log Sequence Number of oldest update done to the page making it dirty

flushedLSN on memory = keep track of the last known log record flushed to disk

masterRecord on disk = keeps track of the last checkpoint in the log record on disk

When to flush the dirty page depends on bufferpool management

To flush a dirtyPage to the disk we check the pageLSN of that page and check whether
pageLSN <= flushedLSN if true we can flush the page to disk, else not we need to flush the log records
that have updated the page first.

Transaction Commit
We can flush the log records from the memory to the disk when a transaction commits, and then update 
the flushedLSN, and then we can also add a TXN-END for the commited transactions but need not be flushed immediately in the log record.


prevLSN = previous LSN that the transaction recorded in the log records 

LOG record
<LSN, prevLSN, transactionID, oldvalue, newvalue> 

CLR's (Compenstation Log Records)
When a transaction aborts we need to go back to all the updates done by it use prevLSN and create CLR
records for them, they are never undone we only redo them.